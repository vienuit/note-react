{"version":3,"sources":["firebaseConnect.js","nav.js","noteItem.js","noteList.js","noteForm.js","AlertInfo.js","addForm.js","App.js","serviceWorker.js","store.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","noteData","ref","Nav","handleAdd","event","preventDefault","props","isEditForm","changEditStatus","changAddStatus","className","style","backgroundColor","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","onClick","Component","connect","state","ownProps","isEdit","isAddForm","isAdd","dispatch","NoteItem","editItem","changeEdit","console","log","getEditData","note","deleteData","getDeleteData","alertOn","noteTitle","role","data-parent","this","i","class","aria-labelledby","noteContent","editObject","deleteId","alertContent","alertStyle","alertOff","NoteList","getData","dataFirebase","map","value","key","on","notes","arrayData","forEach","element","val","notecontent","push","setState","aria-multiselectable","NoteForm","isChange","name","target","addData","title","content","editDataStore","infoItem","JSON","stringify","defaultValue","onChange","aria-describedby","placeholder","testThoi","testConnect","addStatus","addDataStore","getItem","AlertInfo","handleDismiss","alertShow","onDismiss","timeout","AddForm","item","App","removeData","child","remove","showEditForm","showAddForm","once","then","snapshot","React","Boolean","window","location","hostname","match","redux","require","noteInitialState","store","createStore","action","update","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b3f80ed2.chunk.js","sourcesContent":["\r\nimport * as firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/database';\r\n\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyC_dtrIhjzmviMkAEGb4J3575eBmCLVH-Y\",\r\n    authDomain: \"notereactjs-64536.firebaseapp.com\",\r\n    databaseURL: \"https://notereactjs-64536.firebaseio.com\",\r\n    projectId: \"notereactjs-64536\",\r\n    storageBucket: \"notereactjs-64536.appspot.com\",\r\n    messagingSenderId: \"62026741961\",\r\n    appId: \"1:62026741961:web:af8db3e538cafc3860b518\",\r\n    measurementId: \"G-J6YNCE05WE\"\r\n  };\r\n  // Initialize Firebase\r\n \r\n // firebase.analytics();\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const noteData = firebase.database().ref('dataForNote/');\r\n\r\n// var data = firebase.database().ref( 'dataForNote/');\r\n//     data.once('value').then(function(snapshot){\r\n//         console.log(snapshot.val());\r\n//     })\r\n// data.set({\r\n//     id: 1,\r\n//     title : \" sửa id 1\",\r\n//     noteContent: \" yeahh\"\r\n// })","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Nav extends Component {\r\n\r\n  handleAdd = (event) => {\r\n    event.preventDefault();\r\n    //this.props.changEditStatus();\r\n    if(this.props.isEditForm){\r\n      this.props.changEditStatus();\r\n    }\r\n    this.props.changAddStatus();\r\n  }\r\n    render() {\r\n        return (\r\n            <div>\r\n         <nav className=\"navbar navbar-expand-sm navbar-dark mb-4\" style={{backgroundColor: 'black'}}>\r\n          <a className=\"navbar-brand\" href=\"o\">React-Redux-Firebase</a>\r\n          <button className=\"navbar-toggler d-lg-none\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavId\" aria-controls=\"collapsibleNavId\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" />\r\n          <div className=\"collapse navbar-collapse  justify-content-end\" id=\"collapsibleNavId\">\r\n            <ul className=\"navbar-nav  mt-2 mt-lg-0 float-right\">\r\n              <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"o\">Home <span className=\"sr-only\">(current)</span></a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"o\" onClick={(event) => this.handleAdd(event) }>Thêm ghi chú</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"o\">Link</a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        </div>\r\n        );\r\n    }\r\n}\r\nconst  mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    isEditForm : state.isEdit,\r\n    isAddForm : state.isAdd\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n\r\n      changEditStatus: () => {\r\n          dispatch({type:\"CHANGE_EDIT\"})\r\n      },\r\n      changAddStatus: () => {\r\n        dispatch({type:\"CHANGE_ADD_STATUS\"})\r\n    }\r\n\r\n  }\r\n}\r\n//this.props.addDataStore()\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\r\n//export default Nav;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass NoteItem extends Component {\r\n\r\n    editItem = () => {\r\n\r\n        \r\n        this.props.changeEdit();\r\n        if(this.props.isAddForm){\r\n            this.props.changAddStatus();\r\n        }\r\n        \r\n        console.log(this.props.getEditData(this.props.note));\r\n        \r\n    }\r\n    deleteData = () => {\r\n        console.log(this.props.note);\r\n        \r\n       this.props.getDeleteData(this.props.note.id)\r\n       this.props.alertOn('Xóa thành công: ' + this.props.note.noteTitle, 'info');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\" role=\"tab\" id=\"note1\">\r\n                    <h5 className=\"mb-0\">\r\n                        <a data-toggle=\"collapse\" data-parent=\"#noteList\" href={'#number' + this.props.i} aria-expanded=\"true\" aria-controls=\"noteConten1\">\r\n                        {this.props.noteTitle}\r\n                        </a>\r\n                        <button class=\"btn btn-outline-info float-right ml-2\" onClick = { () => this.editItem() }>\r\n                                Sửa <span class=\"badge badge-primary\"></span>\r\n                        </button>\r\n                        <button class=\"btn btn-outline-info float-right\" onClick = { () => this.deleteData()}>\r\n                                Xóa <span class=\"badge badge-primary\"></span>\r\n                        </button>\r\n                    </h5>\r\n                    </div>\r\n                    <div id={\"number\" +  this.props.i} className=\"collapse in\" role=\"tabpanel\" aria-labelledby=\"note1\">\r\n                    <div className=\"card-body\">\r\n                        {this.props.noteContent}\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst  mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isEditForm : state.isEdit,\r\n        isAddForm : state.isAdd\r\n    }\r\n  }\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        changeEdit: () =>{\r\n            dispatch({type:\"CHANGE_EDIT\"})\r\n        },\r\n        changAddStatus: () => {\r\n            dispatch({type:\"CHANGE_ADD_STATUS\"})\r\n        },\r\n        getEditData: (editObject) =>{\r\n            dispatch({\r\n                type:\"GET_EDIT_DATA\",\r\n                editObject\r\n            })\r\n        },\r\n        getDeleteData: (deleteId) =>{\r\n            dispatch({\r\n                type:\"DELETE\",\r\n                deleteId\r\n            })\r\n        },\r\n        alertOn: (alertContent, alertStyle) => {\r\n            dispatch({type:\"ALERT_ON\",alertContent,alertStyle})\r\n        },\r\n        alertOff: () => {\r\n            dispatch({type:\"ALERT_OFF\"})\r\n        }\r\n    }\r\n  }\r\n\r\n  export default connect(mapStateToProps, mapDispatchToProps)(NoteItem);\r\n\r\n//export default NoteItem;","import React, { Component } from 'react';\r\nimport {noteData} from './firebaseConnect';\r\nimport NoteItem from './noteItem';\r\n\r\n\r\nclass NoteList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataFirebase :[]\r\n        }\r\n    }\r\n    \r\n    UNSAFE_componentWillMount() {  // thực hiện trước render\r\n        noteData.on('value', (notes) => {\r\n            var arrayData = [];\r\n            notes.forEach(element => {\r\n                const key = element.key;\r\n                const noteTitle = element.val().noteTitle;\r\n                const noteContent = element.val().notecontent;\r\n                arrayData.push({\r\n                    id: key,\r\n                    noteTitle: noteTitle,\r\n                    noteContent: noteContent\r\n                })\r\n            }) \r\n            this.setState({\r\n                dataFirebase : arrayData\r\n            });\r\n            \r\n        })\r\n    }\r\n    \r\n    getData = () => {\r\n        if(this.state.dataFirebase){\r\n           return  this.state.dataFirebase.map( (value,key) => {\r\n                return (\r\n                    <NoteItem\r\n                        key={key}\r\n                        i = {key}\r\n                        noteTitle={value.noteTitle}\r\n                        noteContent={value.noteContent}\r\n                        note = {value}\r\n                    />\r\n                )\r\n            })\r\n        }\r\n        console.log(this.state.dataFirebase);\r\n    }\r\n    render() {\r\n       \r\n        return (\r\n            <div class=\"col\">\r\n            <div id=\"noteList\" role=\"tablist\" aria-multiselectable=\"true\">\r\n            {this.getData()}\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NoteList;","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\n// Đây là Form Sửa\r\n\r\nclass NoteForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // state để lấy dữ liệu nhập vào và gửi lên hàm sửa\r\n            // state to get input data and send it to the edit function\r\n            noteTitle: \"\",\r\n            noteContent: '',\r\n            id : ''\r\n        }\r\n    }\r\n    \r\n    UNSAFE_componentWillMount() {\r\n        if(this.props.infoItem){\r\n            this.setState({   // edit case, thì có id\r\n                noteTitle: this.props.infoItem.noteTitle,\r\n                noteContent: this.props.infoItem.noteContent,\r\n                id: this.props.infoItem.id\r\n            });\r\n        }\r\n    }\r\n    \r\n    \r\n    isChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        console.log(name);\r\n        console.log(value);\r\n        \r\n        this.setState({\r\n            [name]:value\r\n        });\r\n    }\r\n    addData = (title, content) => {\r\n\r\n        // ở đây chỉ sửa, ko có add\r\n\r\n        if(this.state.id){ // edit case\r\n            console.log('dang sua du lieu');\r\n            var editObject = {};\r\n            editObject.id = this.state.id;\r\n            editObject.noteTitle = this.state.noteTitle ;\r\n            editObject.noteContent = this.state.noteContent;\r\n\r\n            this.props.editDataStore(editObject);\r\n            this.props.changEditStatus(); // tắt form\r\n            this.props.alertOn(\"sửa thành công\", 'success');\r\n            \r\n        }\r\n        // else{ //add case\r\n        //     var item = {};\r\n        //     item.noteTitle = title;\r\n        //     item.notecontent = content;\r\n        //     // // gửi  item len app để app xu li\r\n        //     // console.log(item);\r\n        //     // this.props.getData(item);\r\n    \r\n        //     // dùng redux nè\r\n        //     //item = JSON.stringify(item);\r\n        //     this.props.addDataStore(item);  // sử dụng  reducer trong store ,// dispaatch ADD_DATA\r\n        //     this.props.alertOn(\"Thêm thành công\",'success');\r\n        // }\r\n   \r\n    }\r\n    // printTitle = () => {\r\n    //     if(this.props.addStatus){\r\n    //         // true = add case\r\n    //         return <h4>Thêm Note</h4>\r\n    //     }\r\n    //     else{\r\n    //         return <h4>Sửa Note</h4>\r\n    //     }\r\n    // }\r\n    render() {\r\n        console.log('edittt ' + JSON.stringify( this.props.infoItem));\r\n        \r\n        \r\n        \r\n        return (\r\n            <div className=\"col-4\">\r\n             <h3>Sửa Note</h3>\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <input defaultValue={this.props.infoItem.noteTitle} onChange = {(event) => this.isChange(event)} type=\"text\" className=\"form-control\" name=\"noteTitle\" id=\"noteTitle\" aria-describedby=\"helpIdNoteTitle\" placeholder=\"Tiêu đề note\" />\r\n            </div>\r\n            <h5>Nội dung Note</h5>\r\n            <div className=\"form-group\">\r\n                <textarea defaultValue={this.props.infoItem.noteContent}  onChange = {(event) => this.isChange(event)} type=\"text\" className=\"form-control\" name=\"noteContent\" id=\"noteTitle\" aria-describedby=\"helpIdNoteTitle\" placeholder=\"Nội dung note\"/>\r\n            </div>\r\n            <button type=\"reset\"  onClick={() => this.addData(this.state.noteTitle, this.state.noteContent)}  className=\"btn btn-primary btn-block\">Lưu</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        testThoi: state.testConnect,\r\n        infoItem: state.editItem,\r\n        addStatus: state.isAdd\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        addDataStore: (getItem) => {\r\n            dispatch({type:\"ADD_DATA\",getItem})\r\n        },\r\n        editDataStore: (getItem) => {\r\n            dispatch({type:\"EDIT\",getItem})\r\n        },\r\n        changEditStatus: () => {\r\n            dispatch({type:\"CHANGE_EDIT\"})\r\n        },\r\n        alertOn: (alertContent,alertStyle) => {\r\n            dispatch({type:\"ALERT_ON\",alertContent,alertStyle})\r\n        },\r\n        alertOff: () => {\r\n            dispatch({type:\"ALERT_OFF\"})\r\n        }\r\n    }\r\n}\r\n//this.props.addDataStore()\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteForm);\r\n//export default NoteForm;","import React, { Component } from 'react';\r\nimport { Alert, AlertContainer } from \"react-bs-notifier\";\r\nimport {connect} from 'react-redux';\r\n\r\nclass AlertInfo extends Component {\r\n\r\n    handleDismiss = () => {\r\n        this.props.alertOff();\r\n    }\r\n    render() {\r\n        if(this.props.alertShow === false)    return null;\r\n\r\n        return (\r\n            <AlertContainer>\r\n                <Alert type={this.props.alertStyle} onDismiss= { () => this.handleDismiss() }timeout={1000} >\r\n                    {this.props.alertContent}\r\n                </Alert>\r\n      \r\n            </AlertContainer>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        alertShow: state.alertShow,\r\n        alertContent: state.alertContent,\r\n        alertStyle: state.alertStyle\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        alertOff: () => {\r\n            dispatch({type:\"ALERT_OFF\"})\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AlertInfo)\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nclass AddForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            noteTitle: \"\",\r\n            noteContent: '',\r\n            id : ''\r\n        }\r\n    }\r\n    \r\n    isChange = (event) => {\r\n        const name = event.target.name;\r\n        const value = event.target.value;\r\n        console.log(name);\r\n        console.log(value);\r\n        \r\n        this.setState({\r\n            [name]:value\r\n        });\r\n    }\r\n    addData = (title, content) => {\r\n        var item = {};\r\n        item.noteTitle = title;\r\n        item.notecontent = content;\r\n        // // gửi  item len app để app xu li\r\n        // console.log(item);\r\n        // this.props.getData(item);\r\n\r\n        // dùng redux nè\r\n        //item = JSON.stringify(item);\r\n        this.props.addDataStore(item);  // sử dụng  reducer trong store ,// dispaatch ADD_DATA\r\n        this.props.alertOn(\"Thêm thành công\",'success');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col-4\">\r\n              <h3>Thêm Note</h3>\r\n            <form>\r\n            <div className=\"form-group\">\r\n                <input  onChange = {(event) => this.isChange(event)} type=\"text\" className=\"form-control\" name=\"noteTitle\" id=\"noteTitle\" aria-describedby=\"helpIdNoteTitle\" placeholder=\"Tiêu đề note\" />\r\n                <small id=\"helpIdNoteTitle\" className=\"form-text text-muted\">Điền tiêu đề vào đây</small>\r\n            </div>\r\n            <h5>Nội dung Note</h5>\r\n            <div className=\"form-group\">\r\n                <textarea   onChange = {(event) => this.isChange(event)} type=\"text\" className=\"form-control\" name=\"noteContent\" id=\"noteTitle\" aria-describedby=\"helpIdNoteTitle\" placeholder=\"Nội dung note\"/>\r\n                <small id=\"helpIdNoteTitle\" className=\"form-text text-muted\">Điền nội dung vào đây</small>\r\n            </div>\r\n            <button type=\"reset\"  onClick={() => this.addData(this.state.noteTitle, this.state.noteContent)}  className=\"btn btn-primary btn-block\">Thêm</button>\r\n            </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst  mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        infoItem: state.editItem,\r\n        addStatus: state.isAdd\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        addDataStore: (getItem) => {\r\n            dispatch({type:\"ADD_DATA\",getItem})\r\n        },\r\n        // editDataStore: (getItem) => {\r\n        //     dispatch({type:\"EDIT\",getItem})\r\n        // },\r\n        // changEditStatus: () => {\r\n        //     dispatch({type:\"CHANGE_EDIT\"})\r\n        // },\r\n        alertOn: (alertContent,alertStyle) => {\r\n            dispatch({type:\"ALERT_ON\",alertContent,alertStyle})\r\n        },\r\n        alertOff: () => {\r\n            dispatch({type:\"ALERT_OFF\"})\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddForm)\r\n","import React from 'react';\nimport './App.css';\nimport 'firebase/database';\nimport * as firebase from 'firebase/app';\n\nimport {noteData} from './firebaseConnect'\nimport Nav from './nav'\nimport NoteList from './noteList';\nimport NoteForm from './noteForm';\nimport {connect} from 'react-redux';\nimport AlertInfo from './AlertInfo';\nimport AddForm from './addForm';\n\nclass App extends React.Component  {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n    }\n}\n\n  addData = (item) => {\n    noteData.push(item);\n  }\n  removeData = () => {\n    var connectData = firebase.database().ref('/');\n    connectData.child('note1').remove();\n    console.log('xoa');\n  }\n\n  showEditForm = () => {\n    if(this.props.isEditForm){\n      return(\n        <NoteForm /> \n      )\n    }\n  }\n  showAddForm = () => {\n    if(this.props.isAddForm){\n      return(\n        <AddForm/>\n      )\n    }\n  }\n  render(){\n\n    console.log(noteData.once('value').then(function(snapshot){\n      console.log(snapshot.val());\n    }));\n\n    return (\n      <div className=\"App\">\n        <Nav/>\n        <AlertInfo/>\n        <div class=\"container\">\n          <div class=\"row\">\n              <NoteList/>\n              {/* <NoteForm getData={(item) => this.addData(item)} /> */}\n              \n               {/* dùng redux */}\n               {this.showEditForm()}\n               {this.showAddForm()}\n              \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst  mapStateToProps = (state, ownProps) => {\n  return {\n      isEditForm : state.isEdit,\n      isAddForm : state.isAdd\n  }\n}\n\n//this.props.addDataStore()\n\nexport default connect(mapStateToProps)(App);\n//export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {noteData} from './firebaseConnect';\r\n\r\nvar redux = require('redux');\r\n\r\n\r\nconst noteInitialState = {\r\n    testConnect :'test thoai',\r\n    isEdit : false,\r\n    editItem: {},\r\n    isAdd: false,\r\n    alertShow: false,\r\n    alertContent: '',\r\n    alertStyle:''\r\n}\r\nconst allReducer = (state = noteInitialState, action) => {\r\n    switch (action.type) {\r\n        case \"ADD_DATA\":\r\n            noteData.push(action.getItem);\r\n            console.log('them du lieu ' + action.getItem + ' thanh cong');\r\n            return state\r\n        case \"CHANGE_EDIT\":\r\n            return {...state, isEdit: !state.isEdit}\r\n        case \"CHANGE_ADD_STATUS\":\r\n                return {...state, isAdd: !state.isAdd}\r\n        case \"GET_EDIT_DATA\":\r\n            return {...state, editItem: action.editObject}\r\n        case \"EDIT\":\r\n            // update du lieu len database\r\n            \r\n            noteData.child(action.getItem.id).update({\r\n                noteTitle: action.getItem.noteTitle,\r\n                notecontent: action.getItem.noteContent\r\n            })\r\n            console.log('update '+ JSON.stringify(action.getItem) + ' thanh cong');\r\n                return {...state, editItem: {}}\r\n        case \"DELETE\":\r\n            \r\n            noteData.child(action.deleteId).remove();\r\n            console.log('da xoa phan tu co id '+ action.deleteId);\r\n            console.log('ehichioasdf');\r\n                break;\r\n        case \"ALERT_ON\":\r\n                return {...state, alertShow: true, alertContent:action.alertContent,alertStyle: action.alertStyle}\r\n        case \"ALERT_OFF\":\r\n                return {...state, alertShow: false}\r\n            //return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nvar store = redux.createStore( allReducer);\r\nstore.subscribe(function(){\r\n    console.log(JSON.stringify(store.getState()));\r\n    \r\n})\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store'\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}